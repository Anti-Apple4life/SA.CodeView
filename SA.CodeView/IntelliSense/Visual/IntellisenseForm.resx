<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAC2
        CQAAAk1TRnQBSQFMAgEBBAEAASgBAAEoAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AB4ADP8BkAGpAa0BZgKZAWYCmQEz
        AWYBmQEzAWYBmQEzAWYBmQEzApkBZgGZAcyl/wFmApkBZgGZAcwBZgLMAZkCzAGZAcwB/wFmAcwB/wEz
        AZkBzAEAAZkBzAEzApkBMwFmAZkN/wFmATMBzAFmATMBzAFmATMBzAFmATMBmQFmATMBmQIzBP8BZgEz
        AcwBZgEzAcwBZgEzAcwBZgEzAZkBZgEzAZkCM2z/AWYCmQEzAswBZgHMAf8BmQHMAf8BmQL/AZkBzAH/
        AWYBzAH/ATMBzAH/AQABmQH/AQABmQHMAQABmQHMATMCZgr/AZkBZgzXAZkBZgEzBP8BmQFmDNcBmQFm
        ATM8/wGkAqABZgIzAWYCMwFmAjMBZgIzAWYCMwFmAjMBZgIzAWYCMwFmAjMBZgIzAWYCMwz/AWYCmQEz
        AcwB/wFmAcwB/wGZAcwB/wGZAv8BmQHMAf8BZgHMAf8BMwHMAf8BAAGZAf8BAAGZAcwBAAGZAcwBMwJm
        Cv8BmQFmA/8D8QPqA9cBzAFmATME/wGZAWYD/wPxA+oD1wHMAWYBMwz/AaQCoAFmAjMBZgIzAWYCMwFm
        AjMBZgIzAWYCMwFmAjMBZgIzAWYCMwFmAjMBZgIzDP8BpAKgA/gG4wPdAf8CzAH/AswB8AHKAaYB8AHK
        AaYB8AHKAaYB8AHKAaYBZgIzDP8BZgKZATMBzAH/AWYBzAH/AZkBzAH/AZkC/wGZAcwB/wFmAcwB/wEz
        AcwB/wEAAZkB/wEAAZkBzAEAAZkBzAEzAWYBmQr/ApkD/wP4A/ED1wHMAWYBMwT/ApkD/wP4A/ED1wHM
        AWYBMwz/A7ID/wbjA90D1wPMAfABygGmAfABygGmAfABygGmAcwCmQFmAjMM/wGkAqAD/wb4DIAD+AH/
        AewBzAHwAcoBpgFmAjMM/wFmApkBMwHMAf8BZgHMAf8BmQHMAf8BmQL/AZkBzAH/AWYBzAH/ATMBzAH/
        AQABmQH/AQABmQHMAQABmQHMATMBZgGZCv8CmQH/ApkB/wGZAWYB/wGZAWYB/wGZAWYB/wFmATME/wKZ
        Af8CmQH/AZkBZgH/AZkBZgH/AZkBZgH/AWYBMwz/A7ID/wPLA8ACzAGZA/ECzAGZAcwCmQHMApkB/wHs
        AswCmQFmAjMM/wGkAqAG/wb4CfED+AH/AewBzAHwAcoBpgFmAjMM/wFmApkBMwHMAf8BZgHMAf8BmQHM
        Af8BmQL/AZkBzAH/AWYBzAH/ATMBzAH/AQABmQH/AQABmQHMAQABmQHMATMBZgGZEv8DXw//A18V/wLM
        AZkJ/wP4BvEB/wHsAcwB/wHsAcwB/wHsAswCmQFmAjMM/wGkAqAD/wb4DIAG+AH/AswBZgIzDP8BZgKZ
        ATMBzAH/AWYBzAH/AZkBzAH/AZkC/wGZAcwB/wFmAcwB/wEzAcwB/wEAAZkB/wEAAZkBzAEAAZkBzAEz
        AWYBmRL/A2YP/wNmFf8CzAGZA/8GzAPLA/gCzAGZAswBmQLMAZkB/wHsA8wBmQFmAjMM/wHMApkG/wP4
        Bv8J+APxAf8CzAFmAjMM/wFmApkBMwHMAf8BZgHMAf8BmQHMAf8BmQL/AZkBzAH/AWYBzAH/ATMBzAH/
        AQABmQH/AQABmQHMAQABmQHMATMBZgGZEv8VlhX/AswBmQ//A/gG8QH/AewBzAPAAWYCMwz/A7ID/wb4
        DIAD+APxA90BZgIzDP8BZgKZATMBzAH/AWYBzAH/AZkBzAH/AZkC/wGZAcwB/wFmAcwB/wEzAcwB/wEA
        AZkB/wEAAZkBzAEAAZkBzAEzAWYBmRv/A18e/wLMAZkD/wnMA/8DywPAAswBmQPxA8ABZgIzDP8BzAKZ
        Bv8D+Az/BvgD4wFmAjMM/wFmAZkBzAEzAcwB/wFmAcwB/wGZAcwB/wGZAv8BmQHMAf8BZgHMAf8BMwHM
        Af8BAAGZAf8BAAGZAcwBAAGZAcwBMwFmAZkb/wNVHv8CzAGZEv8D+AbxAf8B7AHMAWYCMwz/AswBmQP/
        BvgMgAb4A+MBZgIzDP8BZgGZAcwBMwHMAf8BZgHMAf8BmQHMAf8BmQL/AZkBzAH/AWYBzAH/ATMBzAH/
        AQABmQH/AQABmQHMAQABmQHMAmYBmRP/AZkBZgH/AZkBZgH/AWYBMwHMAWYBMwHMAWYBMwHMAWYBMwGZ
        AjMW/wKZAf8CmQH/ApkB/wGZAWYB/wGZAWYBzAGZAWYBzAGZAWYBzAFmATMBzAFmATMBzAFmATMBzAFm
        ATMBzAFmATMM/wLMAZke/wFmAjMM/wFmAZkBzAFmAcwB/wGZAv8BzAL/AcwC/wHMAv8BzAL/AZkC/wGZ
        AcwB/wFmAcwB/wEzAswCZgGZE/8BmQFmD9cBzAFmATMW/wKZAfABygGmAf8BzAGZAf8BzAGZAf8BzAGZ
        Af8BzAGZAf8CmQH/AZkBZgH/AZkBZgH/AZkBZgH/AZkBZgHMAWYBMw3/ApkB/wKZAf8CmQHMAZkBZgHM
        AZkBZgHMAZkBZgHMAZkBZgHMAZkBZgHMAWYBMwHMAWYBMwHMAWYBMwHMAWYBMwz/AWYBmQLMAv8BzAL/
        AcwC/wHMAv8BzAL/AcwC/wHMAv8BzAL/AcwC/wHMAv8CZgGZE/8CmQP/A/gD8QH/AewBzAPXAcwBZgEz
        Fv8CmQH/ApkB/wKZAf8CmQH/ApkB/wGZAWYBzAGZAWYBzAGZAWYBzAGZAWYBzAFmATMBzAFmATMBzAFm
        ATMN/wKZAfABygGmAfABygGmAf8BzAGZAf8BzAGZAf8CmQH/AZkBZgH/AZkBZgH/AZkBZgH/AZkBZgH/
        AZkBZgHMAWYBMw//AZkCzAGZAswBxgHWAe8BxgHWAe8BzAL/AcwC/wHGAdYB7wHGAdYB7wGZAswBkAGp
        Aa0W/wKZA/8D+APxA+oD1wHMAWYBM0b/ApkB/wKZAf8CmQHMAZkBZgHMAZkBZgHMAZkBZgHMAZkBZgHM
        AZkBZgHMAWYBMwHMAWYBMwHMAWYBMwHMAWYBMxL/AZkCzAGZAswBkAGpAa0BZgGZAcwBZgKZAWYBmQHM
        AZABqQGtAZkCzBn/ApkB/wKZAf8CmQH/AZkBZgH/AZkBZgH/AZkBZgH/AWYBM2//AUIBTQE+BwABPgMA
        ASgDAAFAAwABIAMAAQEBAAEBBgABARYAA///AAIACw==
</value>
  </data>
</root>